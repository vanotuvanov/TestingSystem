@page "/fetchdata"
@inject HttpClient Http
@inject NavigationManager _nav
@using TestDeveloper.API
@using TestDeveloper.API.DTO;
@using TestDeveloper.Domen

<PageTitle>Список тестов</PageTitle>

@if (fulfil && tests == null)
{
    <p>Пользователи отсутствуют.</p>
}
else if (!fulfil && tests == null)
{
    <p>Идет загрузка...</p>
}

@if (tests != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>№</th>
                <th>Название</th>
                <th>Описание</th>
                <th>Количество вопросов</th>
                <th>Количество попыток</th>
            </tr>
        </thead>
        <tbody>


            @foreach (var test in tests)
            {
                    <tr>
                    <td>@(++count)</td>
                    <td><Button style="background-color:white; text-decoration:underline; border-style:none; color:blue" @onclick="@(()=>_nav.NavigateTo($"/test/{test.Id.ToString()}"))">@test.Name</Button></td>
                    <td>@test.Description </td>
                    <td>@test.OptionDTO.NumberOfQuestions </td>
                    <td>@test.OptionDTO.NumberOfEttemps </td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    private int count = 0;
    private IEnumerable<KnowledgeTestDTO> tests;
    private bool fulfil = false;

    protected override async Task OnParametersSetAsync() =>
    tests = await Http.GetFromJsonAsync<KnowledgeTestDTO[]>
        ("https://localhost:8001/api/test");

    protected override async Task OnInitializedAsync()
    {
        var a = await Http.GetFromJsonAsync<IEnumerable<KnowledgeTestDTO>>
            ("https://localhost:8001/api/test");
        fulfil = true;
    }
}
