@page "/test/{testAttribute}"
@inject HttpClient Http
@using TestDeveloper.API
@using TestDeveloper.API.DTO;
@using TestDeveloper.Domen
@using Blazored
@using Blazored.Modal
@using Blazored.Modal.Services

<PageTitle>Test</PageTitle>

@if (test != null)
{
    <h1 style="border: 10px; display: inline; background:linear-gradient(to bottom right, #1D1858, #750062);  padding: 10px 10px; color: white">@test.Name</h1>
    <span style="padding-left:5px;font-weight:400"> 
        @switch(Convert.ToInt32(test.Status))
        {
            case 10:
                <span style="font-size: 18px; color: yellow">В разработке</span>
                ;
                break;
            case 20:
                <span style="font-size: 18px; color: green">Актуально</span>
                ;
                break;
            case 30:
                <span style="font-size: 18px; color:red">Проведенный </span>
                ;
                break;
            case 50:
                <span style="font-size: 18px; color: blue">В архиве</span>
                ;
                break;
            default:
                <span style="font-size: 18px; color:orange">Что - то пошло не так... </span>
                ;
                break;
        }   
    </span>

    <button style="border-style:none; font-weight: 600; text-decoration:none; color: #fff; background: linear-gradient(to bottom right, #53DF00, #9CEF6C); display: table; margin-top: 20px; padding: 5px 10px;" class="btn btn-primary">Добавить вопрос</button>

   //<ModalDialog/>

    <table class="table">
        <thead>
            <tr>
                <th>№</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@test.Description</td>
            </tr>
        </tbody>
    </table>
}
else
{
    <p>Не успел</p>
}


<button class="btn btn-primary" @onclick="() => modal.Open()">Modal!</button>

<Modal @ref="modal">
    <Title>This is a <em>Title!</em></Title>
    <Body>
        <p>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Omnes enim iucundum motum, quo sensus hilaretur.
            <i>Quis istud possit, inquit, negare?</i>
            <mark>Ego vero isti, inquam, permitto.</mark> Duo Reges: constructio interrete.
        </p>
        <Index />
        <dl>
            <dt><dfn>Stoici scilicet.</dfn></dt>
            <dd>An hoc usque quaque, aliter in vita?</dd>
            <dt><dfn>Erat enim Polemonis.</dfn></dt>
            <dd>Quod cum accidisset ut alter alterum necopinato videremus, surrexit statim.</dd>
        </dl>
    </Body>
    <Footer>
        <button type="button" class="btn btn-primary">Save changes</button>
        <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="() => modal.Close()">Close</button>
    </Footer>
</Modal>

@code {
    private Modal modal { get; set; }
}


@code {
   
    [Parameter]
    public string testAttribute { get; set; }
    private KnowledgeTestDTO test;

    protected override async Task OnParametersSetAsync() =>
        test = await Http.GetFromJsonAsync<KnowledgeTestDTO>
            ("https://localhost:8001/api/test/" + testAttribute); 
    private bool modalVisible;

}
